{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"lon0",
				"LON0"
			],
			[
				"beha",
				"gui_behavior_adder"
			],
			[
				"butt",
				"validate_button"
			],
			[
				"s",
				"s_entry	statement"
			],
			[
				"way",
				"waypoint_radio_button	statement"
			],
			[
				"ch",
				"champ_total	statement"
			],
			[
				"beh",
				"behavior_list	statement"
			]
		]
	},
	"buffers":
	[
		{
			"file": "brest2016_ws/src/process/launch/mission_waypoint.launch",
			"settings":
			{
				"buffer_size": 881,
				"line_ending": "Unix"
			}
		},
		{
			"file": "brest2016_ws/src/process/launch/mission_vector_morse_boat.launch",
			"settings":
			{
				"buffer_size": 1146,
				"line_ending": "Unix"
			}
		},
		{
<<<<<<< Updated upstream
			"file": "brest2016_ws/src/process/src/regulateur_champs_char.py",
			"settings":
			{
				"buffer_size": 2929,
=======
			"contents": "# ~/.bashrc: executed by bash(1) for non-login shells.\n# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)\n# for examples\n\n# If not running interactively, don't do anything\ncase $- in\n    *i*) ;;\n      *) return;;\nesac\n\n# don't put duplicate lines or lines starting with space in the history.\n# See bash(1) for more options\nHISTCONTROL=ignoreboth\n\n# append to the history file, don't overwrite it\nshopt -s histappend\n\n# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)\nHISTSIZE=1000\nHISTFILESIZE=2000\n\n# check the window size after each command and, if necessary,\n# update the values of LINES and COLUMNS.\nshopt -s checkwinsize\n\n# If set, the pattern \"**\" used in a pathname expansion context will\n# match all files and zero or more directories and subdirectories.\n#shopt -s globstar\n\n# make less more friendly for non-text input files, see lesspipe(1)\n[ -x /usr/bin/lesspipe ] && eval \"$(SHELL=/bin/sh lesspipe)\"\n\n# set variable identifying the chroot you work in (used in the prompt below)\nif [ -z \"${debian_chroot:-}\" ] && [ -r /etc/debian_chroot ]; then\n    debian_chroot=$(cat /etc/debian_chroot)\nfi\n\n# set a fancy prompt (non-color, unless we know we \"want\" color)\ncase \"$TERM\" in\n    xterm-color) color_prompt=yes;;\nesac\n\n# uncomment for a colored prompt, if the terminal has the capability; turned\n# off by default to not distract the user: the focus in a terminal window\n# should be on the output of commands, not on the prompt\n#force_color_prompt=yes\n\nif [ -n \"$force_color_prompt\" ]; then\n    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then\n	# We have color support; assume it's compliant with Ecma-48\n	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such\n	# a case would tend to support setf rather than setaf.)\n	color_prompt=yes\n    else\n	color_prompt=\n    fi\nfi\n\nif [ \"$color_prompt\" = yes ]; then\n    PS1='${debian_chroot:+($debian_chroot)}\\[\\033[01;32m\\]\\u@\\h\\[\\033[00m\\]:\\[\\033[01;34m\\]\\w\\[\\033[00m\\]\\$ '\nelse\n    PS1='${debian_chroot:+($debian_chroot)}\\u@\\h:\\w\\$ '\nfi\nunset color_prompt force_color_prompt\n\n# If this is an xterm set the title to user@host:dir\ncase \"$TERM\" in\nxterm*|rxvt*)\n    PS1=\"\\[\\e]0;${debian_chroot:+($debian_chroot)}\\u@\\h: \\w\\a\\]$PS1\"\n    ;;\n*)\n    ;;\nesac\n\n# enable color support of ls and also add handy aliases\nif [ -x /usr/bin/dircolors ]; then\n    test -r ~/.dircolors && eval \"$(dircolors -b ~/.dircolors)\" || eval \"$(dircolors -b)\"\n    alias ls='ls --color=auto'\n    #alias dir='dir --color=auto'\n    #alias vdir='vdir --color=auto'\n\n    alias grep='grep --color=auto'\n    alias fgrep='fgrep --color=auto'\n    alias egrep='egrep --color=auto'\nfi\n\n# some more ls aliases\nalias ll='ls -alF'\nalias la='ls -A'\nalias l='ls -CF'\n\n# some alias to go to brest 2016\nalias cdbrest='cd ~/Desktop/Brest_2016/brest-git/Brest2016/brest2016_ws/ && source devel/setup.bash'\n\n# Add an \"alert\" alias for long running commands.  Use like so:\n#   sleep 10; alert\nalias alert='notify-send --urgency=low -i \"$([ $? = 0 ] && echo terminal || echo error)\" \"$(history|tail -n1|sed -e '\\''s/^\\s*[0-9]\\+\\s*//;s/[;&|]\\s*alert$//'\\'')\"'\n\n# Alias definitions.\n# You may want to put all your additions into a separate file like\n# ~/.bash_aliases, instead of adding them here directly.\n# See /usr/share/doc/bash-doc/examples in the bash-doc package.\n\nif [ -f ~/.bash_aliases ]; then\n    . ~/.bash_aliases\nfi\n\n# enable programmable completion features (you don't need to enable\n# this, if it's already enabled in /etc/bash.bashrc and /etc/profile\n# sources /etc/bash.bashrc).\nif ! shopt -oq posix; then\n  if [ -f /usr/share/bash-completion/bash_completion ]; then\n    . /usr/share/bash-completion/bash_completion\n  elif [ -f /etc/bash_completion ]; then\n    . /etc/bash_completion\n  fi\nfi\nsource /opt/ros/indigo/setup.bash\nexport PS1='\\u@\\h \\W: '\nexport MORSE_BLENDER=~/Applications/blender-2.76b-linux-glibc211-x86_64/blender\nexport LD_LIBRARY_PATH=/usr/local/cuda-6.5/lib64:$LD_LIBRARY_PATH\nexport PATH=/usr/local/cuda-6.5/bin:$PATH\n\nalias lsport='python /home/brest2016/Desktop/serial_list.py'\n\n\n# export ROS_MASTER_URI=http://192.168.1.21:11311\n# export ROS_IP=192.168.1.21\nexport ROS_MASTER_URI=http://192.168.0.100:11311\nexport ROS_IP=192.168.0.100\n\n",
			"file": "/home/brest2016/.bashrc",
			"file_size": 4239,
			"file_write_time": 131114961400096544,
			"settings":
			{
				"buffer_size": 4239,
				"line_ending": "Unix"
			}
		},
		{
			"file": "brest2016_ws/src/sensors/src/Camera_publisher.py",
			"settings":
			{
				"buffer_size": 939,
>>>>>>> Stashed changes
				"line_ending": "Unix"
			}
		},
		{
			"file": "brest2016_ws/src/process/src/regulateur_champs_boat.py",
			"settings":
			{
				"buffer_size": 3266,
				"line_ending": "Unix"
			}
		},
		{
			"file": "brest2016_ws/src/process/launch/mission_vector_field.launch",
			"settings":
			{
				"buffer_size": 1079,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Anaconda Python Builder",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
<<<<<<< Updated upstream
		"height": 117.0,
		"last_filter": "install",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
=======
		"height": 96.0,
		"last_filter": "instla",
		"selected_items":
		[
			[
				"instla",
				"Package Control: Install Package"
			],
			[
				"git puh",
				"Git: Push"
			],
			[
				"git com",
				"Git: Commit"
			],
			[
				"git add",
				"Git: Add All"
			],
			[
				"git sta",
				"Git: Status"
			],
			[
				"git diff",
				"Git: Diff All Files"
			],
			[
				"git pull",
				"Git: Pull"
>>>>>>> Stashed changes
			],
			[
				"git push",
				"Git: Push"
			],
			[
				"git comm",
				"Git: Commit"
			],
			[
<<<<<<< Updated upstream
				"git add",
				"Git: Add Current File"
			],
			[
				"git pul",
				"Git: Pull"
			],
			[
				"git quic",
				"Git: Quick Commit"
			],
			[
				"git ad",
				"Git: Add All"
			],
			[
				"git pull",
				"Git: Pull"
=======
				"git ",
				"Git: Commit"
>>>>>>> Stashed changes
			],
			[
				"git diff",
				"Git: Diff Current File"
			],
			[
				"git statu	",
				"Git: Status"
			],
			[
				"preview",
				"Markdown Preview: Preview in Browser"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"makrd",
				"Set Syntax: Markdown Extended"
			],
			[
				"git stat",
				"Git: Status"
			],
			[
				"list pa",
				"Package Control: List Packages"
			],
			[
				"git co",
				"Git: Commit"
			],
			[
				"git ommi",
				"Git: Commit"
			],
			[
				"git qui",
				"Git: Quick Commit"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"git pus",
				"Git: Push"
			],
			[
				"gitstat",
				"Git: Status"
			],
			[
				"git qiu",
				"Git: Quick Commit"
			],
			[
				"git aa",
				"Git: Add All"
			],
			[
				"pull",
				"Git: Pull"
			],
			[
				"xml",
				"Set Syntax: XML"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"isnta",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"isntall",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
<<<<<<< Updated upstream
		"/home/ejalaa12/Desktop/Brest2016",
		"/home/ejalaa12/Desktop/Brest2016/brest2016_ws",
		"/home/ejalaa12/Desktop/Brest2016/brest2016_ws/rosgraphs",
		"/home/ejalaa12/Desktop/Brest2016/brest2016_ws/src",
		"/home/ejalaa12/Desktop/Brest2016/brest2016_ws/src/process",
		"/home/ejalaa12/Desktop/Brest2016/brest2016_ws/src/process/launch",
		"/home/ejalaa12/Desktop/Brest2016/brest2016_ws/src/process/src",
		"/home/ejalaa12/Desktop/Brest2016/brest2016_ws/src/utilities",
		"/home/ejalaa12/Desktop/Brest2016/brest2016_ws/src/utilities/src"
=======
		"/home/brest2016/Desktop/Brest_2016/brest-git/Brest2016",
		"/home/brest2016/Desktop/Brest_2016/brest-git/Brest2016/Morse",
		"/home/brest2016/Desktop/Brest_2016/brest-git/Brest2016/Morse/brest_sim",
		"/home/brest2016/Desktop/Brest_2016/brest-git/Brest2016/Morse/comet_simulator",
		"/home/brest2016/Desktop/Brest_2016/brest-git/Brest2016/Morse/comet_simulator/src",
		"/home/brest2016/Desktop/Brest_2016/brest-git/Brest2016/Morse/comet_simulator/src/comet_simulator",
		"/home/brest2016/Desktop/Brest_2016/brest-git/Brest2016/Morse/comet_simulator/src/comet_simulator/actuators",
		"/home/brest2016/Desktop/Brest_2016/brest-git/Brest2016/Morse/comet_simulator/src/comet_simulator/builder",
		"/home/brest2016/Desktop/Brest_2016/brest-git/Brest2016/Morse/comet_simulator/src/comet_simulator/builder/robots",
		"/home/brest2016/Desktop/Brest_2016/brest-git/Brest2016/Morse/environments",
		"/home/brest2016/Desktop/Brest_2016/brest-git/Brest2016/brest2016_ws"
>>>>>>> Stashed changes
	],
	"file_history":
	[
		"/home/ejalaa12/Desktop/Brest2016/brest2016_ws/src/process/src/regulateur_champs_char.py",
		"/home/ejalaa12/Desktop/Brest2016/brest2016_ws/src/process/launch/mission_waypoint.launch",
		"/home/ejalaa12/Desktop/Brest2016/README.md",
		"/home/ejalaa12/Desktop/Brest2016/brest2016_ws/src/utilities/src/LL_to_local.py",
		"/home/ejalaa12/Desktop/Brest2016/brest2016_ws/src/actuators/src/motor_controller.py",
		"/home/ejalaa12/Desktop/Brest2016/brest2016_ws/src/sensors/launch/laser_complet.launch",
		"/home/ejalaa12/Desktop/Brest2016/brest2016_ws/src/sensors/src/range_to_point.py",
		"/home/ejalaa12/Desktop/Brest2016/brest2016_ws/src/sensors/src/range_to_pcl.py",
		"/home/ejalaa12/Desktop/Brest2016/brest2016_ws/src/sensors/laserNode_arduino/laserNode_arduino.ino",
		"/home/ejalaa12/.bashrc",
		"/home/ejalaa12/Desktop/serial_list.py",
		"/home/ejalaa12/Desktop/Brest2016/log/laser_no_servo_description.md",
		"/home/ejalaa12/.cache/.fr-gzxD0r/README.md",
		"/home/ejalaa12/.config/sublime-text-3/Packages/User/Python.sublime-settings",
		"/home/ejalaa12/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/ejalaa12/.config/sublime-text-3/Packages/User/JSON.sublime-settings",
		"/home/ejalaa12/Desktop/ros_ws/ros_ws",
		"/home/ejalaa12/Desktop/ros_ws/src/useful_nodes/src/tf_fixed.py",
		"/home/ejalaa12/Desktop/Brest2016/brest2016_ws/src/process/src/char_obstacle.py",
		"/home/ejalaa12/Desktop/Brest2016/brest2016_ws/src/process/src/Behavior.py",
		"/home/ejalaa12/Desktop/Brest2016/brest2016_ws/src/process/src/behavior_server.py",
		"/opt/ros/indigo/setup.bash",
		"/home/ejalaa12/Desktop/Brest2016/brest2016_ws/src/rviz_satellite/src/map2world_tf_broadcaster.py",
		"/home/ejalaa12/Desktop/Brest2016/brest2016_ws/src/process/src/behavior_client_n.py",
		"/home/ejalaa12/Desktop/Brest2016/brest2016_ws/src/process/launch/mission_vector_morse.launch",
		"/home/ejalaa12/Desktop/Brest2016/brest2016_ws/src/process/src/vectorFieldLib.py",
		"/home/ejalaa12/Desktop/Brest2016/Brouillon_&_Tests/vectorFieldLib_test.py",
		"/home/ejalaa12/Desktop/Brest2016/Brouillon_&_Tests/vectorFieldLib_v0.py",
		"/home/ejalaa12/Desktop/Brest2016/brest2016_ws/src/process/src/gui_behavior_adder.py",
		"/home/ejalaa12/Desktop/Brest2016/Morse/brest_sim/default.py",
		"/home/ejalaa12/Desktop/Brest2016/brest2016_ws/src/process/src/regulateur_champs.py",
		"/home/ejalaa12/Desktop/Brest2016/brest2016_ws/src/process/launch/mission_vector_morse_boat.launch",
		"/home/ejalaa12/Desktop/Brest2016/brest2016_ws/src/process/src/regulateur_champs3.py",
		"/home/ejalaa12/Desktop/Brest2016/Morse/comet_simulator/default.py",
		"/home/ejalaa12/Desktop/Brest2016/brest2016_ws/src/process/src/behavior_client1.py",
		"/home/ejalaa12/Desktop/Jetson_TK1/_installer/logs/install_gameworks_compilers.log",
		"/home/ejalaa12/Desktop/Brest2016/brest2016_ws/src/simulation2d/launch/simulation_behavior_char_2d_gui.launch",
		"/home/ejalaa12/Desktop/Brest2016/brest2016_ws/src/simulation2d/src/sim_char.py",
		"/home/ejalaa12/Desktop/Brest2016/brest2016_ws/src/process/src/behavior_client2.py",
		"/home/ejalaa12/Downloads/Python-3.4.2/README",
		"/home/ejalaa12/Desktop/Brest2016/brest2016_ws/src/simulation2d/launch/simulation_behavior_char_2d.launch",
		"/home/ejalaa12/Desktop/Brest2016/.gitignore",
		"/home/ejalaa12/Desktop/Brest2016/brest2016_ws/src/process/msg/BehaviorInfo.msg",
		"/home/ejalaa12/Desktop/Brest2016/brest2016_ws/src/process/src/behavior_client.py",
		"/home/ejalaa12/Desktop/Brest2016/brest2016_ws/src/CMakeLists.txt",
		"/home/ejalaa12/Desktop/Brest2016/Brouillon_&_Tests/behavior_manager.py",
		"/home/ejalaa12/Desktop/Brest2016/Brouillon_&_Tests/Behavior.py"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"stamp",
			"```",
			"get_param",
			"profil",
			"vitesse_boat",
			"int",
			"enable",
			"yb",
			"Xa",
			"xa",
			"Xa",
			"xa",
			"Xa",
			"xa",
			"Xa",
			"xa",
			"xa_label = Label(parameter_frame, text='Xa')\nxa_entry = Spinbox(parameter_frame, from_=-999, to=999, increment=0.1, format='%.2f')",
			"pack()",
			"fen",
			"gedit"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"sublime_text"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "brest2016_ws/src/process/launch/mission_waypoint.launch",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 881,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "brest2016_ws/src/process/launch/mission_vector_morse_boat.launch",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1146,
						"regions":
						{
						},
						"selection":
						[
							[
								733,
								733
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
<<<<<<< Updated upstream
					"stack_index": 1,
=======
					"stack_index": 5,
>>>>>>> Stashed changes
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "brest2016_ws/src/process/src/regulateur_champs_char.py",
					"semi_transient": false,
					"settings":
					{
<<<<<<< Updated upstream
						"buffer_size": 2929,
=======
						"buffer_size": 4239,
>>>>>>> Stashed changes
						"regions":
						{
						},
						"selection":
						[
							[
<<<<<<< Updated upstream
								0,
								0
=======
								4237,
								4237
>>>>>>> Stashed changes
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
<<<<<<< Updated upstream
						"translation.y": 0.0,
=======
						"translation.y": 981.0,
>>>>>>> Stashed changes
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
<<<<<<< Updated upstream
					"file": "brest2016_ws/src/process/src/regulateur_champs_boat.py",
=======
					"file": "brest2016_ws/src/sensors/src/Camera_publisher.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 939,
						"regions":
						{
						},
						"selection":
						[
							[
								456,
								456
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "brest2016_ws/src/sensors/launch/laser_complet.launch",
>>>>>>> Stashed changes
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3266,
						"regions":
						{
						},
						"selection":
						[
							[
								2968,
								2968
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1305.0,
						"zoom_level": 1.0
					},
<<<<<<< Updated upstream
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "brest2016_ws/src/process/launch/mission_vector_field.launch",
=======
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "README.md",
>>>>>>> Stashed changes
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1079,
						"regions":
						{
						},
						"selection":
						[
							[
								664,
								664
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
<<<<<<< Updated upstream
					"stack_index": 3,
=======
					"stack_index": 2,
>>>>>>> Stashed changes
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 112.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 112.0
	},
	"pinned_build_system": "",
	"project": "brest2016.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"regul",
				"brest2016_ws/src/process/src/regulateur_champs_boat.py"
			],
			[
				"ll",
				"brest2016_ws/src/utilities/src/LL_to_local.py"
			],
			[
				"motor",
				"brest2016_ws/src/actuators/src/motor_controller.py"
			],
			[
				"ino",
				"brest2016_ws/src/sensors/laserNode_arduino/laserNode_arduino.ino"
			],
			[
				"desc",
				"log/laser_no_servo_description.md"
			],
			[
				"rangeto",
				"brest2016_ws/src/sensors/src/range_to_point.py"
			],
			[
				"reg",
				"brest2016_ws/src/process/src/regulateur_champs_boat.py"
			],
			[
				"defau",
				"Morse/brest_sim/default.py"
			],
			[
				"tfbo",
				"brest2016_ws/src/rviz_satellite/src/map2world_tf_broadcaster.py"
			],
			[
				"beha",
				"brest2016_ws/src/process/src/Behavior.py"
			],
			[
				"vfl",
				"Brouillon_&_Tests/vectorFieldLib_v0.py"
			],
			[
				"gui",
				"brest2016_ws/src/process/src/gui_behavior_adder.py"
			],
			[
				"charob",
				"brest2016_ws/src/process/src/char_obstacle.py"
			],
			[
				"regula",
				"brest2016_ws/src/process/src/regulateur_champs.py"
			],
			[
				"dfe",
				"Morse/brest_sim/default.py"
			],
			[
				"default",
				"Morse/comet_simulator/default.py"
			],
			[
				"defaul",
				"Morse/brest_sim/default.py"
			],
			[
				"regu",
				"brest2016_ws/src/process/src/regulateur_champs.py"
			],
			[
				"behcli1",
				"brest2016_ws/src/process/src/behavior_client1.py"
			],
			[
				"morsedefau",
				"Morse/comet_simulator/default.py"
			],
			[
				"behams",
				"brest2016_ws/src/process/msg/BehaviorInfo.msg"
			],
			[
				"behav",
				"brest2016_ws/src/process/src/Behavior.py"
			],
			[
				"launch",
				"brest2016_ws/src/process/launch/mission_waypoint.launch"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Desktop/ros_ws/ros_ws.sublime-project"
			],
			[
				"ros",
				"~/Desktop/ros_ws/ros_ws.sublime-project"
			],
			[
				"bres",
				"~/Desktop/Brest2016/brest2016.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 305.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
