#!/usr/bin/env  python
import rospy
from behaviorUtil import BehaviorManager
# We need to import the code generated by python :

from package.srv import srvname, srvnameResponse


# The callback function takes a single argument of type WordCountRequest
# and returns a single argument of type WordCountResponse:


def callback(behavior):
    global bm
    bm.behavior_list.append(behavior)
    return srvnameResponse()


rospy.init_node('behavior_manager')

rate = rospy.Rate(10)
# After initializing the node, we advertise the service, giving
# it a name (word_count) and a type (WordCount), and specifying
# the callback that will implement it:
bm = BehaviorManager()
service = rospy.service('service_name', srvname, callback)
pub = rospy.Publisher()

while not rospy.is_shutdown():
    # supression des doublons
    bm.check_list()
    # transformation en champs
    bm.toFields()
    # Sommation des champs
    bm.sumFields()
    # publication du champs de vecteurs
    pub.publish(bm.vectorField)
    # pause 
    rate.sleep()
